/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.projetoprova;

import java.awt.Color;
import java.util.Random;

/**
 *
 * @author gusta
 */
public class Prova extends javax.swing.JFrame {
    
        Integer contador = 0;
        
        Integer maxcpu = 0 ; 
        Integer mediacpu = 0;
        Integer mincpu =  100;
        Integer somacpu = 0;
     
        Integer maxmemoria = 0; 
        Integer minmemoria = 100 ;
        Integer mediamemoria = 0 ; 

        Integer somamemoria = 0;
        
        Integer numeromaxdisco = 0 ; 
        Integer numeromindisco =1000 ;
        Integer mediadisco = 0 ; 

        Integer somadisco = 0;

    /**
     * Creates new form Prova
     */
    public Prova() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jblCPU = new javax.swing.JLabel();
        jblDISCO = new javax.swing.JLabel();
        jblMEMORIA = new javax.swing.JLabel();
        pgbCPU = new javax.swing.JProgressBar();
        pgbDISCO = new javax.swing.JProgressBar();
        pgbMEMORIA = new javax.swing.JProgressBar();
        jblminCPU = new javax.swing.JLabel();
        jblmediaCPU = new javax.swing.JLabel();
        jblmaxCPU = new javax.swing.JLabel();
        jblminDISCO = new javax.swing.JLabel();
        jblmediaDISCO = new javax.swing.JLabel();
        jblmaxDISCO = new javax.swing.JLabel();
        jblminMEMORIA = new javax.swing.JLabel();
        jblmediaMEMORIA = new javax.swing.JLabel();
        jblmaxMEMORIA = new javax.swing.JLabel();
        btnGerar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jblCPU.setText("CPU");

        jblDISCO.setText("DISCO");

        jblMEMORIA.setText("MEMÓRIA");

        jblminCPU.setText("Min");

        jblmediaCPU.setText("Média");

        jblmaxCPU.setText("Máx");

        jblminDISCO.setText("Min");

        jblmediaDISCO.setText("Média");

        jblmaxDISCO.setText("Máx");

        jblminMEMORIA.setText("Min");

        jblmediaMEMORIA.setText("Média");

        jblmaxMEMORIA.setText("Máx");

        btnGerar.setText("Fazer leitura dos dados");
        btnGerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnGerar)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jblminDISCO)
                            .addGap(65, 65, 65)
                            .addComponent(jblmediaDISCO)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jblmaxDISCO))
                        .addComponent(jblDISCO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jblMEMORIA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jblCPU, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pgbCPU, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                        .addComponent(pgbDISCO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jblminMEMORIA)
                            .addGap(47, 47, 47)
                            .addComponent(jblmediaMEMORIA)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jblmaxMEMORIA))
                        .addComponent(pgbMEMORIA, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jblminCPU)
                            .addGap(63, 63, 63)
                            .addComponent(jblmediaCPU)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jblmaxCPU))))
                .addContainerGap(141, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jblCPU)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pgbCPU, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jblminCPU)
                    .addComponent(jblmediaCPU)
                    .addComponent(jblmaxCPU))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jblDISCO)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pgbDISCO, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jblminDISCO)
                    .addComponent(jblmediaDISCO)
                    .addComponent(jblmaxDISCO))
                .addGap(26, 26, 26)
                .addComponent(jblMEMORIA)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pgbMEMORIA, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jblmaxMEMORIA)
                    .addComponent(jblmediaMEMORIA)
                    .addComponent(jblminMEMORIA))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(btnGerar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarActionPerformed
       
        //Incrementando o contador
        contador ++ ;
        
        //Gerando número aleatório
        Random cpu = new Random();
        Integer cpunumero = cpu.nextInt(101);

        somacpu += cpunumero;
        
        // Calcular a média
        mediacpu = somacpu / contador;

        //Dando valor para a barra
        pgbCPU.setValue(cpunumero);
        pgbCPU.setStringPainted(true);
        
        //Dando cor para as labels de Min,Média e Máx
        jblminCPU.setForeground(Color.black);
        jblmediaCPU.setForeground(Color.blue);
        jblmaxCPU.setForeground(Color.red);
        
        //Validando Valor
        if(cpunumero > maxcpu){
            maxcpu = cpunumero;
        }
            if(cpunumero < mincpu){
            mincpu = cpunumero;
        } 
        //Colocando a porcentagem nas labels
        jblmaxCPU.setText(String.format("%d%%",maxcpu )) ;
        jblminCPU.setText(String.format("%d%%",mincpu )) ;
        jblmediaCPU.setText(String.format("%d%%",mediacpu)) ;
        
        // Criando o número aleatório
        Random disco = new Random();
        Integer disconumero = disco.nextInt(101); 
        
        // Calcular a média
        somadisco = somadisco + disconumero ;
        mediadisco = somadisco / contador ;
        
        //Dando valor para a barra
        pgbDISCO.setValue(disconumero);
        pgbDISCO.setStringPainted(true);
        
        //Dando cor para as labels de Min,Média e Máx
        jblminDISCO.setForeground(Color.black);
        jblmediaDISCO.setForeground(Color.blue);
        jblmaxDISCO.setForeground(Color.red);
        
        //Validando Valor
        if(disconumero > numeromaxdisco){
            numeromaxdisco = disconumero ;
        }
        if(disconumero < numeromindisco){
            numeromindisco = disconumero ;
        }
         //Colocando a porcentagem nas labels
         jblmaxDISCO.setText(String.format("%d%%",numeromaxdisco )) ;
        jblminDISCO.setText(String.format("%d%%",numeromindisco )) ;
        jblmediaDISCO.setText(String.format("%d%%",mediadisco )) ;
        
        // Criando o número aleatório
        Random memoria = new Random();
        Integer memorianumero = memoria.nextInt(101); 
        
        // Calcular a média
        somamemoria = somamemoria + memorianumero ;
        mediamemoria = somamemoria / contador;
        
        //Colocando a porcentagem nas labels
        jblmediaMEMORIA.setText(String.format("%d%%" ,memorianumero));
        jblminMEMORIA.setText("%");
        jblmaxMEMORIA.setText("%");
        
        //Dando valor para a barra
        pgbMEMORIA.setValue(memorianumero);
        pgbMEMORIA.setStringPainted(true);
        
        //Dando cor para as labels de Min,Média e Máx
        jblminMEMORIA.setForeground(Color.black);
        jblmediaMEMORIA.setForeground(Color.blue);
        jblmaxMEMORIA.setForeground(Color.red);
        
        //Validando Valor
        if(memorianumero > maxmemoria){
            maxmemoria = memorianumero ;
        }
        if(memorianumero < minmemoria){
            minmemoria = memorianumero ;
        }
        
         //Colocando a porcentagem nas labels
        jblmaxMEMORIA.setText(String.format("%d%%",maxmemoria )) ;
        jblminMEMORIA.setText(String.format("%d%%",minmemoria )) ;
        jblmediaMEMORIA.setText(String.format("%d%%",mediamemoria )) ;
    }//GEN-LAST:event_btnGerarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Prova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Prova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Prova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Prova.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Prova().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGerar;
    private javax.swing.JLabel jblCPU;
    private javax.swing.JLabel jblDISCO;
    private javax.swing.JLabel jblMEMORIA;
    private javax.swing.JLabel jblmaxCPU;
    private javax.swing.JLabel jblmaxDISCO;
    private javax.swing.JLabel jblmaxMEMORIA;
    private javax.swing.JLabel jblmediaCPU;
    private javax.swing.JLabel jblmediaDISCO;
    private javax.swing.JLabel jblmediaMEMORIA;
    private javax.swing.JLabel jblminCPU;
    private javax.swing.JLabel jblminDISCO;
    private javax.swing.JLabel jblminMEMORIA;
    private javax.swing.JProgressBar pgbCPU;
    private javax.swing.JProgressBar pgbDISCO;
    private javax.swing.JProgressBar pgbMEMORIA;
    // End of variables declaration//GEN-END:variables
}
